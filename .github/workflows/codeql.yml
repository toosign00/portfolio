name: "CodeQL Advanced with PR Comments"

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]
  schedule:
    - cron: '0 0 * * 1'  # 매주 월요일 한국시간 09:00

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read
      pull-requests: write  # ← PR 코멘트 권한 추가

    strategy:
      fail-fast: false
      matrix:
        include:
        - language: javascript-typescript
          build-mode: none

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
        output: sarif-results
        upload: false  # ← 일단 업로드 하지 않고 결과 확인

    # PR 코멘트 추가
    - name: Comment PR with CodeQL Results
      if: github.event_name == 'pull_request'
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: sarif-results/${{ matrix.language }}.sarif
        category: "/language:${{matrix.language}}"

    # PR에 상세 코멘트 추가
    - name: Add detailed comment to PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          // SARIF 파일 읽기
          let sarifContent;
          try {
            sarifContent = JSON.parse(fs.readFileSync('sarif-results/${{ matrix.language }}.sarif', 'utf8'));
          } catch (error) {
            console.log('SARIF 파일을 찾을 수 없습니다.');
            return;
          }

          const results = sarifContent.runs[0]?.results || [];
          
          if (results.length === 0) {
            // 취약점이 없는 경우
            const comment = `## 🛡️ CodeQL 보안 스캔 결과

            ✅ **보안 취약점이 발견되지 않았습니다!**
            
            - 스캔 완료 시간: ${new Date().toLocaleString('ko-KR')}
            - 분석 언어: JavaScript/TypeScript
            - 스캔 상태: 성공
            
            안전한 코드입니다! 🎉`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
            return;
          }

          // 취약점별 분류
          const severityCount = {
            error: 0,
            warning: 0,
            note: 0
          };

          let detailsTable = '';
          
          results.forEach(result => {
            const level = result.level || 'note';
            severityCount[level]++;
            
            const rule = result.rule || {};
            const location = result.locations?.[0]?.physicalLocation?.artifactLocation?.uri || 'Unknown';
            const line = result.locations?.[0]?.physicalLocation?.region?.startLine || 'Unknown';
            const message = result.message?.text || 'No description';
            
            detailsTable += `| ${getSeverityEmoji(level)} ${level.toUpperCase()} | \`${location}\` | Line ${line} | ${message.substring(0, 100)}... |\n`;
          });

          function getSeverityEmoji(level) {
            switch(level) {
              case 'error': return '🔴';
              case 'warning': return '🟡';
              case 'note': return '🔵';
              default: return 'ℹ️';
            }
          }

          const comment = `## 🛡️ CodeQL 보안 스캔 결과

          ⚠️ **${results.length}개의 보안 이슈가 발견되었습니다.**

          ### 📊 요약
          - 🔴 Critical/High: ${severityCount.error}개
          - 🟡 Medium: ${severityCount.warning}개  
          - 🔵 Low/Info: ${severityCount.note}개

          ### 📋 상세 내역
          | 심각도 | 파일 | 위치 | 설명 |
          |--------|------|------|------|
          ${detailsTable}

          ### 🔗 상세 확인
          전체 보안 스캔 결과는 [Security 탭](https://github.com/${context.repo.owner}/${context.repo.repo}/security/code-scanning)에서 확인하세요.

          ### 🚨 권장사항
          ${severityCount.error > 0 ? '🔴 **Critical/High 이슈는 머지 전에 반드시 수정해주세요.**' : ''}
          ${severityCount.warning > 0 ? '🟡 Medium 이슈는 가능한 빠른 시일 내에 수정을 권장합니다.' : ''}
          
          ---
          _스캔 완료: ${new Date().toLocaleString('ko-KR')}_`;

          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  # 정기 스캔은 Security 탭에만 업로드
  upload-results:
    if: github.event_name != 'pull_request'
    needs: analyze
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
    - name: Upload to Security tab
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: sarif-results
